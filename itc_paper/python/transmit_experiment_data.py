"""
Transmits a pure 1486MHz cosine on B210 USRP, center frequency 1485MHz.
Provides configurable function transmit_cosine
"""

# Imports
from numpy import arange, exp, pi, floor, complex64, array

# Dumb setup stuff because the API is not set up well and I don't know how to fix it.
# You probably have to create uhd_params and put the path in
import sys
from uhd_params import path_to_uhd_module as path

sys.path.insert(0, path)
import uhd


def transmit_cosine(
    fc=1485e6, f1=1486e6, duration=10, sample_rate=10e6, channels=[0], gain=20
):
    """
    Transmits a pure cosine at f1 with center frequency fc for duration seconds,
    with sample_rate, gain, and channels specifiable
    """

    # Generator function for low-pass equivalent signal of a cosine
    # sine = lambda n, freq_offset, rate: exp(n * 2j * pi * freq_offset / rate)

    # freq_offset = f1 - fc  # Low pass equivalent frequency
    # n = arange(int(10 * floor(sample_rate / freq_offset)), dtype=complex64)
    x_tilde = array([ (9.242410770419719-0.310342274468433j), 
        (8.757495868167387+2.969881945183630j), 
        (-0.572295197495735+7.797973811874932j), 
        (-7.553280267620007+5.328257794356941j), 
        (-7.181087300967108-2.796417067878568j), 
        (-2.394228574957423-7.407342056262642j), 
        (3.263982084566755-6.614739987359478j), 
        (6.711757241889105-6.358807677492783j), 
        (4.040971497118139-8.310098699580770j), 
        (-3.882891920770493-7.971293309919712j), 
        (-8.217347046884889-4.165485922438550j), 
        (-2.363077961455642-0.899497995778190j), 
        (7.220218162996176+0.374164691075424j), 
        (8.355950532881449+2.247716008984435j), 
        (-0.110875351380566+4.963587547025305j), 
        (-7.185139163457717+5.818988428871858j), 
        (-5.519625741482651+5.155467105175224j), 
        (0.246339097598876+6.206768570740234j), 
        (3.397113406011753+8.542319788801610j), 
        (4.918863898505531+7.825606102545069j), 
        (7.855552309356544+2.862637470118765j), 
        (8.812864200536058-2.514004398694879j), 
        (3.448685624529409-5.465371799278694j), 
        (-3.411042159338023-7.209403053615863j), 
        (-2.740784453976461-8.823596611368352j), 
        (4.424006965510848-8.120798245596616j), 
        (7.472314703953184-2.923352202371229j), 
        (2.518371126499387+4.509533451773690j), 
        (-1.840775117406940+8.204593734425446j), 
        (0.668641887413273+4.140674753992270j), 
        (3.433785362257259-4.504121920011027j), 
        (-1.083170198392464-9.182959539515425j), 
        (-7.224472692157624-5.565514076692694j), 
        (-4.768440757822059+0.132989822789703j), 
        (3.542220471663286-1.046817908177073j), 
        (5.291275652867270-7.584343113867186j), 
        (-2.464741507510851-8.897862292485971j), 
        (-9.097700776392472-1.115802448784631j), 
        (-6.453464650744580+6.557038689153357j), 
        (1.381820837748803+5.151388694231762j), 
        (6.766679974408065-1.729493218056849j), 
        (7.832259789211720-4.916445923056120j), 
        (5.930105985843153-3.308292348191974j), 
        (1.883309972039120-3.129373132296381j), 
        (-1.370321940975836-6.717750777192451j), 
        (0.613858237130275-9.227333173944348j), 
        (6.577002525084572-6.034454354869979j), 
        (9.129680420183215+1.437228747547767j), 
        (5.330136529188828+7.554487938276049j), 
        (1.672378001034304+7.807436143702614j), 
        (4.202606320220000+3.060783684034233j), 
        (9.222790853906053-0.602131403287672j), 
        (9.101672763693360+1.637247511037771j), 
        (3.233130580723623+6.937642683012425j), 
        (-2.326389844554586+8.623433943823484j), 
        (-3.806484340559175+6.149558613242362j), 
        (-3.223379129291121+5.230645612785115j), 
        (-3.455186543768693+7.106504178704220j), 
        (-3.796159669607397+5.461509050937076j), 
        (-1.888058008910641-2.444032766537359j), 
        (1.448952893700786-9.132420757176066j), 
        (1.828684291664842-6.963421373274828j), 
        (-2.475794131039426+1.183175916007353j), 
        (-5.830995719311161+7.175573465336104j), 
        (-1.582223653228240+8.223517899378185j), 
        (7.006045991362522+6.035346505545477j), 
        (9.194711101890512+0.794465346767589j), 
        (2.451053371010316-6.322659060037155j), 
        (-2.882757849099890-8.782818758675017j), 
        (0.356405503721283-1.833640654474499j), 
        (4.981071168678231+7.784339713048753j), 
        (2.669749689935160+8.184418259206993j), 
        (-1.250476483108074-1.216509689244408j), 
        (1.762749070795207-7.883364455561124j), 
        (6.427011503933556-3.307120157941148j), 
        (2.099741944389937+5.303600264954619j), 
        (-7.342266400955022+5.612111773393561j), 
        (-8.940691353930376-2.363108033183352j), 
        (-2.948544449469456-6.760860283440167j), 
        (-1.851727242871488-1.379717449490607j), 
        (-7.720692686232194+5.088660100243064j), 
        (-9.054687290922594+1.877692747016513j), 
        (-2.333939961907008-7.291357412476211j), 
        (1.583443500418189-9.095364383062062j), 
        (-2.957870481138797-0.808822417922753j), 
        (-7.723885948058847+5.082103529163835j), 
        (-7.121601872189917+0.203979672453300j), 
        (-6.645388736804320-6.408996710255286j), 
        (-8.262600043143426-2.928957637988253j), 
        (-4.353229497542992+5.872899348077334j), 
        (5.535381639527168+6.135373760293175j), 
        (8.719877215634831-3.072726622349204j), 
        (0.279758525044635-9.237673705303063j), 
        (-6.254249421186969-6.810145939927132j), 
        (-0.909883630007509-3.997945653267054j), 
        (5.607697989962484-6.799066712084370j), 
        (0.778012320736807-9.191616050547594j), 
        (-8.067925804831861-4.435333003668085j), 
        (-7.324466667659925+4.094590279539718j), 
        (-0.630570761235918+9.214059931090688j), 
        (-0.956866247368769+9.102709201694523j), 
        (-7.611696508059945+5.181449191570309j), 
        (-9.063815740431965-1.794705686495579j), 
        (-3.371087734472720-8.606107920474416j), 
        (0.945086556067114-9.198916759977692j), 
        (1.075341388188979-2.369963558937744j), 
        (1.678767809158461+5.454567764813385j), 
        (2.659420427604839+8.588065247759662j), 
        (-0.701873749369902+7.972032861478210j), 
        (-6.507492303129466+6.570081302952570j), 
        (-7.635826978046417+5.216381052535485j), 
        (-3.532581457295682+5.064608676856396j), 
        (0.304711819256415+7.316000152125845j), 
        (2.839787361381054+8.797082511172139j), 
        (6.705550040636372+5.324110032868108j), 
        (9.225056053649714+0.596932338889487j), 
        (5.617240684768334+2.527292752812491j), 
        (-0.692788222080802+9.108667151134462j), 
        (-2.323657002690815+8.950999548659739j), 
        (-0.590030421762516-0.815158025353409j), 
        (-2.116692323300119-9.002326116775865j), 
        (-4.867504820490304-7.847255829517906j), 
        (-1.050113210496456-3.972124014483679j), 
        (6.570126226214689-4.838592247124669j), 
        (6.045203953997754-6.123073715745504j), 
        (-3.725980846436767-1.932784948978143j), 
        (-8.763235303386811+2.950761871225803j), 
        (-0.988760425910728+2.038218755998301j)])

    tx = uhd.usrp.MultiUSRP()
    input("Press enter to start transmitting. ")
    print("Transmitting...")
    tx.set_master_clock_rate(10e6)
    tx.send_waveform(
        waveform_proto=x_tilde,
        duration=duration,
        freq=fc,
        rate=sample_rate,
        channels=channels,
        gain=gain
    )
    print("\nTransmission complete.")


if __name__ == "__main__":
    transmit_cosine(duration=60, gain=40)
